// require statements


// Class declaration

// It provides helper methods injected to controller classes
// used to call view engine
var ControllerExtensions = {}


// Respond to client with data generated by view engine
//
// params - additional parameters to view engine to manipulate reply
ControllerExtensions.respond = function (params) {
  var viewContext = Core.ViewEngine.createViewContext();
  viewContext.viewModel = this.viewModel;
  viewContext.request  = this.request;
  viewContext.response = this.response;
  viewContext.controller = this.name;
  viewContext.action = this.action; 
 
  Core.ViewEngine.ViewManager.render(viewContext, params);  
}

//
// Exposed public api
//

// Injects extension methods to controller instance
//
// controller - controller object
// action - action name being executed
exports.injectExtensions = function (controller, action) {
  controller.merge(ControllerExtensions);
  controller.viewModel = Core.ViewEngine.Utils.loadViewModel(controller.name, controller.action);
}
